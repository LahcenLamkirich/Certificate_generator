{"version":3,"sources":["../../source/read/unpackXlsxFileBrowser.js"],"names":["JSZip","unpackXlsxFile","file","files","loadAsync","then","zip","forEach","relativePath","zipEntry","dir","push","name","entries","Promise","all","map","async","content"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC5C,MAAMC,KAAK,GAAG,EAAd;AAEA,SAAOH,KAAK,CAACI,SAAN,CAAgBF,IAAhB,EAAsBG,IAAtB,CAA2B,UAACC,GAAD,EAAS;AAC1C,QAAMH,KAAK,GAAG,EAAd;AACAG,IAAAA,GAAG,CAACC,OAAJ,CAAY,UAACC,YAAD,EAAeC,QAAf,EAA4B;AACvC,UAAI,CAACA,QAAQ,CAACC,GAAd,EAAmB;AAClBP,QAAAA,KAAK,CAACQ,IAAN,CAAWF,QAAQ,CAACG,IAApB;AACA;AACD,KAJD;AAMA,QAAMC,OAAO,GAAG,EAAhB;AACA,WAAOC,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACa,GAAN,CAAU,UAACd,IAAD,EAAU;AACtC,aAAOI,GAAG,CAACJ,IAAJ,CAASA,IAAT,EAAee,KAAf,CAAqB,QAArB,EAA+BZ,IAA/B,CAAoC,UAAAa,OAAO;AAAA,eAAIL,OAAO,CAACX,IAAD,CAAP,GAAgBgB,OAApB;AAAA,OAA3C,CAAP;AACA,KAFkB,CAAZ,EAGNb,IAHM,CAGD;AAAA,aAAMQ,OAAN;AAAA,KAHC,CAAP;AAIA,GAbM,CAAP;AAcA","sourcesContent":["import JSZip from 'jszip'\r\n\r\n/**\r\n * Reads XLSX file in a browser.\r\n * @param  {file} file - A file being uploaded in the browser.\r\n * @return {Promise} Resolves to an object holding XLSX file entries.\r\n */\r\nexport default function unpackXlsxFile(file) {\r\n\tconst files = {}\r\n\r\n\treturn JSZip.loadAsync(file).then((zip) => {\r\n\t\tconst files = []\r\n\t\tzip.forEach((relativePath, zipEntry) => {\r\n\t\t\tif (!zipEntry.dir) {\r\n\t\t\t\tfiles.push(zipEntry.name)\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tconst entries = {}\r\n\t\treturn Promise.all(files.map((file) => {\r\n\t\t\treturn zip.file(file).async('string').then(content => entries[file] = content)\r\n\t\t}))\r\n\t\t.then(() => entries)\r\n\t})\r\n}"],"file":"unpackXlsxFileBrowser.js"}