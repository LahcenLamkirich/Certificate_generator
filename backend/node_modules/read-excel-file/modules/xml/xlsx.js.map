{"version":3,"sources":["../../source/xml/xlsx.js"],"names":["findChild","findChildren","forEach","map","getTagName","getCells","document","worksheet","documentElement","sheetData","cells","row","cell","push","getCellValue","node","getCellInlineStringValue","cellNode","firstChild","textContent","getDimensions","dimensions","getAttribute","getBaseStyles","styleSheet","cellStyleXfs","getCellStyles","cellXfs","getNumberFormats","numberFormats","numFmts","getSharedStrings","sst","string","t","value","r","getWorkbookProperties","workbook","getRelationships","relationships","getSheets","sheets"],"mappings":"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","sourcesContent":["import { findChild, findChildren, forEach, map, getTagName } from './dom'\r\n\r\nexport function getCells(document) {\r\n  const worksheet = document.documentElement\r\n  const sheetData = findChild(worksheet, 'sheetData')\r\n  let cells = []\r\n  forEach(sheetData, 'row', (row) => {\r\n    forEach(row, 'c', (cell) => {\r\n      cells.push(cell)\r\n    })\r\n  })\r\n  return cells\r\n}\r\n\r\nexport function getCellValue(document, node) {\r\n  return findChild(node, 'v')\r\n}\r\n\r\nexport function getCellInlineStringValue(cellNode) {\r\n  if (cellNode.firstChild &&\r\n    getTagName(cellNode.firstChild) === 'is' &&\r\n    cellNode.firstChild.firstChild &&\r\n    getTagName(cellNode.firstChild.firstChild) === 't') {\r\n    return cellNode.firstChild.firstChild.textContent\r\n  }\r\n}\r\n\r\nexport function getDimensions(document) {\r\n  const worksheet = document.documentElement\r\n  const dimensions = findChild(worksheet, 'dimension')\r\n  if (dimensions) {\r\n    return dimensions.getAttribute('ref')\r\n  }\r\n}\r\n\r\nexport function getBaseStyles(document) {\r\n  const styleSheet = document.documentElement\r\n  const cellStyleXfs = findChild(styleSheet, 'cellStyleXfs')\r\n  if (cellStyleXfs) {\r\n    return findChildren(cellStyleXfs, 'xf')\r\n  }\r\n  return []\r\n}\r\n\r\nexport function getCellStyles(document) {\r\n  const styleSheet = document.documentElement\r\n  const cellXfs = findChild(styleSheet, 'cellXfs')\r\n  if (!cellXfs) {\r\n    return []\r\n  }\r\n  return findChildren(cellXfs, 'xf')\r\n}\r\n\r\nexport function getNumberFormats(document) {\r\n  const styleSheet = document.documentElement\r\n  let numberFormats = []\r\n  const numFmts = findChild(styleSheet, 'numFmts')\r\n  if (numFmts) {\r\n    return findChildren(numFmts, 'numFmt')\r\n  }\r\n  return []\r\n}\r\n\r\nexport function getSharedStrings(document) {\r\n\t// An `<si/>` element can contain a `<t/>` (simplest case) or a set of `<r/>` (\"rich formatting\") elements having `<t/>`.\r\n\t// https://docs.microsoft.com/en-us/dotnet/api/documentformat.openxml.spreadsheet.sharedstringitem?redirectedfrom=MSDN&view=openxml-2.8.1\r\n\t// http://www.datypic.com/sc/ooxml/e-ssml_si-1.html\r\n\r\n  const sst = document.documentElement\r\n  return map(sst, 'si', string => {\r\n    const t = findChild(string, 't')\r\n    if (t) {\r\n      return t.textContent\r\n    }\r\n    let value = ''\r\n    forEach(string, 'r', (r) => {\r\n      value += findChild(r, 't').textContent\r\n    })\r\n    return value\r\n  })\r\n}\r\n\r\nexport function getWorkbookProperties(document) {\r\n  const workbook = document.documentElement\r\n  return findChild(workbook, 'workbookPr')\r\n}\r\n\r\nexport function getRelationships(document) {\r\n  const relationships = document.documentElement\r\n  return findChildren(relationships, 'Relationship')\r\n}\r\n\r\nexport function getSheets(document) {\r\n  const workbook = document.documentElement\r\n  const sheets = findChild(workbook, 'sheets')\r\n  return findChildren(sheets, 'sheet')\r\n}"],"file":"xlsx.js"}