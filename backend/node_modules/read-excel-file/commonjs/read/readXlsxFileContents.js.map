{"version":3,"sources":["../../source/read/readXlsxFileContents.js"],"names":["readXlsxFileContents","entries","xml","schema","map","options","result","properties","data"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;;;;;;;;;;;;;AAEe,SAASA,oBAAT,CAA8BC,OAA9B,EAAuCC,GAAvC,QAAwE;AAAA,MAA1BC,MAA0B,QAA1BA,MAA0B;AAAA,MAAlBC,GAAkB,QAAlBA,GAAkB;AAAA,MAAVC,OAAU;;AACtF,MAAI,CAACF,MAAD,IAAWC,GAAf,EAAoB;AACnBD,IAAAA,MAAM,GAAG,oCAAmBC,GAAnB,CAAT;AACA;;AACD,MAAME,MAAM,GAAG,0BAASL,OAAT,EAAkBC,GAAlB,kCAA4BG,OAA5B;AAAqCE,IAAAA,UAAU,EAAEJ,MAAM,IAAIE,OAAO,CAACE;AAAnE,KAAf;;AACA,MAAIJ,MAAJ,EAAY;AACX,WAAO,+BAAcG,MAAM,CAACE,IAArB,EAA2BL,MAA3B,kCAAwCE,OAAxC;AAAiDE,MAAAA,UAAU,EAAED,MAAM,CAACC;AAApE,OAAP;AACA;;AACD,SAAOD,MAAP;AACA","sourcesContent":["import readXlsx from './readXlsx'\r\n\r\nimport convertToJson from './schema/convertToJson'\r\nimport convertMapToSchema from './schema/convertMapToSchema'\r\n\r\nexport default function readXlsxFileContents(entries, xml, { schema, map, ...options}) {\r\n\tif (!schema && map) {\r\n\t\tschema = convertMapToSchema(map)\r\n\t}\r\n\tconst result = readXlsx(entries, xml, { ...options, properties: schema || options.properties })\r\n\tif (schema) {\r\n\t\treturn convertToJson(result.data, schema, { ...options, properties: result.properties })\r\n\t}\r\n\treturn result\r\n}"],"file":"readXlsxFileContents.js"}